name: Deploy Yjs Server

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: codespace-yjs-server

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }} .

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}

    - name: Prepare SSH Bastion tunnel to Yjs
      run: |
        mkdir -p ~/.ssh
        # Write the raw private key directly
        echo "${{ secrets.BASTION_PRIVATE_KEY }}" > ~/.ssh/bastion.pem
        chmod 600 ~/.ssh/bastion.pem

        # Add bastion host to known_hosts
        ssh-keyscan -H ${{ secrets.BASTION_HOST }} >> ~/.ssh/known_hosts
        chmod 600 ~/.ssh/known_hosts

        # Test bastion key file
        echo "Testing bastion key file:"
        ls -l ~/.ssh/bastion.pem
        ssh-keygen -l -f ~/.ssh/bastion.pem || echo "Invalid key format"

        # Test bastion host connectivity
        echo "Testing bastion host connectivity:"
        nc -zv ${{ secrets.BASTION_HOST }} 22 || echo "Bastion host not reachable"

        # Configure SSH for both bastion and Yjs
        printf "Host bastion\n  HostName %s\n  User %s\n  IdentityFile ~/.ssh/bastion.pem\n  StrictHostKeyChecking no\n  UserKnownHostsFile ~/.ssh/known_hosts\n\nHost yjs\n  HostName %s\n  User %s\n  IdentityFile ~/.ssh/bastion.pem\n  ProxyCommand ssh -W %%h:%%p bastion\n  StrictHostKeyChecking no\n  UserKnownHostsFile ~/.ssh/known_hosts\n" "${{ secrets.BASTION_HOST }}" "${{ secrets.BASTION_USER }}" "${{ secrets.YJS_PRIVATE_IP }}" "${{ secrets.YJS_USER }}" > ~/.ssh/config
        chmod 600 ~/.ssh/config

    - name: Test Bastion SSH connection
      run: ssh -v bastion 'echo "Bastion connection successful"'

    - name: Test Yjs SSH connection
      run: ssh -v yjs 'echo "SSH connection successful"'

    - name: Deploy to Yjs via Bastion
      run: |
        ssh -v yjs <<EOSSH
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          docker stop yjs || true && docker rm yjs || true
          docker run -d --name yjs -p 1234:1234 ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
        EOSSH
