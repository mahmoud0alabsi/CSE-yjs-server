name: Deploy Yjs Server

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: codespace-yjs-server

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }} .

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}

    - name: Prepare SSH Bastion tunnel to Yjs
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.BASTION_PRIVATE_KEY }}" | base64 -d > ~/.ssh/bastion.pem
        chmod 600 ~/.ssh/bastion.pem

        echo "Host yjs" >> ~/.ssh/config
        echo "  HostName ${{ secrets.YJS_PRIVATE_IP }}" >> ~/.ssh/config
        echo "  User ${{ secrets.YJS_USER }}" >> ~/.ssh/config
        echo "  IdentityFile ~/.ssh/bastion.pem" >> ~/.ssh/config
        echo "  ProxyCommand ssh -i ~/.ssh/bastion.pem -o StrictHostKeyChecking=no -W %h:%p ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_HOST }}" >> ~/.ssh/config
        echo "  StrictHostKeyChecking no" >> ~/.ssh/config

    - name: Deploy to Yjs via Bastion
      run: |
        ssh yjs <<EOSSH
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          docker stop yjs || true && docker rm yjs || true
          docker run -d --name yjs -p 1234:1234 ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
        EOSSH
